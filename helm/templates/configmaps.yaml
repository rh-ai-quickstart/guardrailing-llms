---
kind: ConfigMap
apiVersion: v1
metadata:
  name: fms-orchestr8-config-nlp
  namespace: {{ .Release.Namespace }}
data:
  config.yaml: |
    chat_generation:
      service:
        hostname: {{ .Values.mainLLM.name }}-predictor.{{ .Release.Namespace }}.svc.cluster.local
        port: {{ .Values.mainLLM.port }}
    detectors:
      regex:
        type: text_contents
        service:
            hostname: "127.0.0.1"
            port: {{ .Values.detectors.regex.port }}
        chunker_id: whole_doc_chunker
        default_threshold: 0.5
      hap:
        type: text_contents
        service:
          hostname: ibm-hate-and-profanity-detector-predictor.{{ .Release.Namespace }}.svc.cluster.local
          port: {{ .Values.detectors.hateAndProfanity.port }}
        chunker_id: whole_doc_chunker
        default_threshold: {{ .Values.detectors.hateAndProfanity.threshold }}
      prompt_injection:
        type: text_contents
        service:
          hostname: prompt-injection-detector-predictor.{{ .Release.Namespace }}.svc.cluster.local
          port: {{ .Values.detectors.promptInjection.port }}
        chunker_id: whole_doc_chunker
        default_threshold: {{ .Values.detectors.promptInjection.threshold }}
      gibberish:
        type: text_contents
        service:
          hostname: gibberish-detector-predictor.{{ .Release.Namespace }}.svc.cluster.local
          port: {{ .Values.detectors.gibberish.port }}
        chunker_id: whole_doc_chunker
        default_threshold: {{ .Values.detectors.gibberish.threshold }}
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: gorch-regex-gateway-image-config
  namespace: {{ .Release.Namespace }}
data:
  GatewayImage: 'quay.io/repository/trustyai/vllm-orchestrator-gateway@sha256:c511b386d61a728acdfe8a1ac7a16b3774d072dd053718e5b9c5fab0f025ac3b'
  regexDetectorImage: 'quay.io/repository/trustyai/regex-detector@sha256:efab6cd8b637b9c35d311aaf639dfedee7d28de3ee07b412ab473deadecd3606'
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: fms-orchestr8-config-gateway
  namespace: {{ .Release.Namespace }}
  labels:
    app: fmstack-nlp
data:
  config.yaml: |
    orchestrator:
      host: "localhost"
      port: {{ .Values.orchestrator.port }}
    detectors:
      - name: regex
        input: true
        output: true
        detector_params:
          regex:
            - email
            - ssn
      - name: hap
        input: true
        output: true
        detector_params: {}
      - name: prompt_injection
        input: true
        output: false
        detector_params: {}
      - name: gibberish
        input: true
        output: true
        detector_params: {}
    routes:
      - name: all
        detectors:
          - regex
          - hap
          - prompt_injection
          - gibberish
      - name: passthrough
        detectors:
